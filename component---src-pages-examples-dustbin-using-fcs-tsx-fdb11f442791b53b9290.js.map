{"version":3,"sources":["webpack:///./src/examples/01 Dustbin/Single Target with FCs/Dustbin.tsx","webpack:///./src/examples/01 Dustbin/Single Target with FCs/Box.tsx","webpack:///./src/examples/01 Dustbin/Single Target with FCs/Container.tsx","webpack:///./src/examples/01 Dustbin/Single Target with FCs/index.tsx","webpack:///./src/pages/examples/dustbin/using-fcs.tsx","webpack:///./src/examples/01 Dustbin/Single Target/ItemTypes.ts"],"names":["style","height","width","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","float","DropTarget","ItemTypes","BOX","drop","name","connect","monitor","connectDropTarget","dropTarget","isOver","canDrop","_ref","isActive","backgroundColor","react","Object","assign","border","cursor","DragSource","beginDrag","props","endDrag","item","getItem","dropResult","getDropResult","alert","connectDragSource","dragSource","isDragging","opacity","Container","overflow","clear","Single_Target_with_FCs_Dustbin","Single_Target_with_FCs_Box","DustbinFC","render","href","Single_Target_with_FCs_Container","React","__webpack_exports__","layout","Single_Target_with_FCs_DustbinFC"],"mappings":"uJASMA,EAA6B,CAClCC,OAAQ,QACRC,MAAO,QACPC,YAAa,SACbC,aAAc,SACdC,MAAO,QACPC,QAAS,OACTC,UAAW,SACXC,SAAU,OACVC,WAAY,SACZC,MAAO,QAgCOC,uBACdC,IAAUC,IACV,CACCC,KADD,WAEE,MAAO,CAAEC,KAAM,aAGjB,SAACC,EAA8BC,GAA/B,MAA+D,CAC9DC,kBAAmBF,EAAQG,aAC3BC,OAAQH,EAAQG,SAChBC,QAASJ,EAAQI,YAVJV,CAvB0B,SAAAW,GAInC,IAHLD,EAGKC,EAHLD,QACAD,EAEKE,EAFLF,OACAF,EACKI,EADLJ,kBAEMK,EAAWF,GAAWD,EAExBI,EAAkB,OAOtB,OANID,EACHC,EAAkB,YACRH,IACVG,EAAkB,aAGZN,EACJA,EACAO,EAAA,qBAAKzB,MAAK0B,OAAAC,OAAA,GAAO3B,EAAP,CAAcwB,qBACtBD,EAAW,kBAAoB,oBAGjC,OCvCEvB,UAA6B,CAClC4B,OAAQ,kBACRJ,gBAAiB,QACjBlB,QAAS,cACTH,YAAa,SACbC,aAAc,SACdyB,OAAQ,OACRnB,MAAO,SAgBOoB,uBACdlB,IAAUC,IACV,CACCkB,UADD,SACWC,GACT,MAAO,CACNjB,KAAMiB,EAAMjB,OAGdkB,QAND,SAMSD,EAAiBf,GACxB,IAAMiB,EAAOjB,EAAQkB,UACfC,EAAanB,EAAQoB,gBAEvBD,GACHE,MAAK,eAAgBJ,EAAKnB,KAArB,SAAkCqB,EAAWrB,KAA7C,OAIR,SAACC,EAA8BC,GAA/B,MAA+D,CAC9DsB,kBAAmBvB,EAAQwB,aAC3BC,WAAYxB,EAAQwB,eAnBPX,CAPkB,SAAAR,GAA6C,IAA1CmB,EAA0CnB,EAA1CmB,WAAYF,EAA8BjB,EAA9BiB,kBAAmBxB,EAAWO,EAAXP,KAC5D2B,EAAUD,EAAa,GAAM,EACnC,OAAOF,EACJA,EAAkBd,EAAA,qBAAKzB,MAAK0B,OAAAC,OAAA,GAAO3B,EAAP,CAAc0C,aAAY3B,IACtD,OCZW4B,EAbkB,kBAChClB,EAAA,yBACCA,EAAA,qBAAKzB,MAAO,CAAE4C,SAAU,SAAUC,MAAO,SACxCpB,EAAA,cAACqB,EAAD,OAEDrB,EAAA,qBAAKzB,MAAO,CAAE4C,SAAU,SAAUC,MAAO,SACxCpB,EAAA,cAACsB,EAAD,CAAKhC,KAAK,UACVU,EAAA,cAACsB,EAAD,CAAKhC,KAAK,WACVU,EAAA,cAACsB,EAAD,CAAKhC,KAAK,aCTQiC,4FACbC,kBACN,OACCxB,EAAA,yBACCA,EAAA,uBACCA,EAAA,uBACCA,EAAA,mBAAGyB,KAAK,oIAAR,uBAKFzB,EAAA,0FACAA,EAAA,cAAC0B,EAAD,WAZmCC,0BCCxBC,EAAA,iBAACrB,GAAD,OACdP,EAAA,cAAC6B,EAAA,EAAWtB,EACXP,EAAA,cAAC8B,EAAD,0CCNaF,EAAA,GACdxC,IAAK","file":"component---src-pages-examples-dustbin-using-fcs-tsx-fdb11f442791b53b9290.js","sourcesContent":["import * as React from 'react'\nimport {\n\tDropTarget,\n\tDropTargetConnector,\n\tDropTargetMonitor,\n\tConnectDropTarget,\n} from 'react-dnd'\nimport ItemTypes from '../Single Target/ItemTypes'\n\nconst style: React.CSSProperties = {\n\theight: '12rem',\n\twidth: '12rem',\n\tmarginRight: '1.5rem',\n\tmarginBottom: '1.5rem',\n\tcolor: 'white',\n\tpadding: '1rem',\n\ttextAlign: 'center',\n\tfontSize: '1rem',\n\tlineHeight: 'normal',\n\tfloat: 'left',\n}\n\nexport interface DustbinProps {\n\tcanDrop?: boolean\n\tisOver?: boolean\n\tconnectDropTarget?: ConnectDropTarget\n}\n\nconst Dustbin: React.SFC<DustbinProps> = ({\n\tcanDrop,\n\tisOver,\n\tconnectDropTarget,\n}) => {\n\tconst isActive = canDrop && isOver\n\n\tlet backgroundColor = '#222'\n\tif (isActive) {\n\t\tbackgroundColor = 'darkgreen'\n\t} else if (canDrop) {\n\t\tbackgroundColor = 'darkkhaki'\n\t}\n\n\treturn connectDropTarget\n\t\t? connectDropTarget(\n\t\t\t\t<div style={{ ...style, backgroundColor }}>\n\t\t\t\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\n\t\t\t\t</div>,\n\t\t  )\n\t\t: null\n}\n\nexport default DropTarget(\n\tItemTypes.BOX,\n\t{\n\t\tdrop() {\n\t\t\treturn { name: 'Dustbin' }\n\t\t},\n\t},\n\t(connect: DropTargetConnector, monitor: DropTargetMonitor) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t\tisOver: monitor.isOver(),\n\t\tcanDrop: monitor.canDrop(),\n\t}),\n)(Dustbin)\n","import * as React from 'react'\nimport {\n\tConnectDragSource,\n\tDragSource,\n\tDragSourceConnector,\n\tDragSourceMonitor,\n} from 'react-dnd'\nimport ItemTypes from '../Single Target/ItemTypes'\n\nconst style: React.CSSProperties = {\n\tborder: '1px dashed gray',\n\tbackgroundColor: 'white',\n\tpadding: '0.5rem 1rem',\n\tmarginRight: '1.5rem',\n\tmarginBottom: '1.5rem',\n\tcursor: 'move',\n\tfloat: 'left',\n}\n\nexport interface BoxProps {\n\tname: string\n\tisDragging?: boolean\n\tconnectDragSource?: ConnectDragSource\n}\n\nconst Box: React.SFC<BoxProps> = ({ isDragging, connectDragSource, name }) => {\n\tconst opacity = isDragging ? 0.4 : 1\n\treturn connectDragSource\n\t\t? connectDragSource(<div style={{ ...style, opacity }}>{name}</div>)\n\t\t: null\n}\n\nexport default DragSource(\n\tItemTypes.BOX,\n\t{\n\t\tbeginDrag(props: BoxProps) {\n\t\t\treturn {\n\t\t\t\tname: props.name,\n\t\t\t}\n\t\t},\n\t\tendDrag(props: BoxProps, monitor: DragSourceMonitor) {\n\t\t\tconst item = monitor.getItem()\n\t\t\tconst dropResult = monitor.getDropResult()\n\n\t\t\tif (dropResult) {\n\t\t\t\talert(`You dropped ${item.name} into ${dropResult.name}!`)\n\t\t\t}\n\t\t},\n\t},\n\t(connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n\t\tconnectDragSource: connect.dragSource(),\n\t\tisDragging: monitor.isDragging(),\n\t}),\n)(Box)\n","import * as React from 'react'\nimport Dustbin from './Dustbin'\nimport Box from './Box'\n\nconst Container: React.SFC<{}> = () => (\n\t<div>\n\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t<Dustbin />\n\t\t</div>\n\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t<Box name=\"Glass\" />\n\t\t\t<Box name=\"Banana\" />\n\t\t\t<Box name=\"Paper\" />\n\t\t</div>\n\t</div>\n)\n\nexport default Container\n","import * as React from 'react'\nimport Container from './Container'\n\nexport default class DustbinFC extends React.PureComponent {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/01%20Dustbin/Single%20Target%20with%20SCs\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>This is the same simple example using React Function Components</p>\n\t\t\t\t<Container />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/01 Dustbin/Single Target with FCs'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n","export default {\n\tBOX: 'box',\n}\n"],"sourceRoot":""}