{"version":3,"sources":["webpack:///./src/examples/01 Dustbin/Single Target/Container.tsx","webpack:///./src/examples/01 Dustbin/Single Target/index.tsx","webpack:///./src/pages/examples/dustbin/single-target.tsx","webpack:///./src/examples/01 Dustbin/Single Target/ItemTypes.ts","webpack:///./src/examples/01 Dustbin/Single Target/Dustbin.tsx","webpack:///./src/examples/01 Dustbin/Single Target/Box.tsx"],"names":["Container","render","react","style","overflow","clear","Dustbin","Box","name","React","href","Container_Container","__webpack_exports__","props","layout","Single_Target","BOX","height","width","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","float","_this$props","this","canDrop","isOver","connectDropTarget","isActive","backgroundColor","react__WEBPACK_IMPORTED_MODULE_2__","Object","assign","DropTarget","ItemTypes","drop","connect","monitor","dropTarget","border","cursor","boxSource","beginDrag","endDrag","item","getItem","dropResult","getDropResult","alert","isDragging","connectDragSource","opacity","react__WEBPACK_IMPORTED_MODULE_3__","DragSource","dragSource"],"mappings":"+IAIqBA,4FACbC,kBACN,OACCC,EAAA,yBACCA,EAAA,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,MAAO,SACxCH,EAAA,cAACI,EAAA,EAAD,OAEDJ,EAAA,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,MAAO,SACxCH,EAAA,cAACK,EAAA,EAAD,CAAKC,KAAK,UACVN,EAAA,cAACK,EAAA,EAAD,CAAKC,KAAK,WACVN,EAAA,cAACK,EAAA,EAAD,CAAKC,KAAK,gBAVwBC,aCDvBA,SAAmB,kBAClCP,EAAA,yBACCA,EAAA,uBACCA,EAAA,uBACCA,EAAA,mBAAGQ,KAAK,uHAAR,uBAKFR,EAAA,iEACAA,EAAA,iMAKAA,EAAA,cAACS,EAAD,kBCdaC,EAAA,iBAACC,GAAD,OACdX,EAAA,cAACY,EAAA,EAAWD,EACXX,EAAA,cAACa,EAAD,0CCNaH,EAAA,GACdI,IAAK,4FCQAb,EAA6B,CAClCc,OAAQ,QACRC,MAAO,QACPC,YAAa,SACbC,aAAc,SACdC,MAAO,QACPC,QAAS,OACTC,UAAW,SACXC,SAAU,OACVC,WAAY,SACZC,MAAO,QAeFpB,4FACEL,kBAAS,IAAA0B,EACgCC,KAAKf,MAA5CgB,EADOF,EACPE,QAASC,EADFH,EACEG,OAAQC,EADVJ,EACUI,kBACnBC,EAAWH,GAAWC,EAExBG,EAAkB,OAOtB,OANID,EACHC,EAAkB,YACRJ,IACVI,EAAkB,aAIlBF,GACAA,EACCG,EAAA,qBAAK/B,MAAKgC,OAAAC,OAAA,GAAOjC,EAAP,CAAc8B,qBACtBD,EAAW,kBAAoB,wBAhBfvB,aAuBP4B,yBACdC,IAAUtB,IApCO,CACjBuB,KADiB,WAEhB,MAAO,CAAE/B,KAAM,aAoChB,SAACgC,EAA8BC,GAA/B,MAA+D,CAC9DV,kBAAmBS,EAAQE,aAC3BZ,OAAQW,EAAQX,SAChBD,QAASY,EAAQZ,YANJQ,CAQb/B,iGCxDIH,EAA6B,CAClCwC,OAAQ,kBACRV,gBAAiB,QACjBX,QAAS,cACTH,YAAa,SACbC,aAAc,SACdwB,OAAQ,OACRlB,MAAO,QASFmB,EAAY,CACjBC,UADiB,SACPjC,GACT,MAAO,CACNL,KAAMK,EAAML,OAIduC,QAPiB,SAOTlC,EAAiB4B,GACxB,IAAMO,EAAOP,EAAQQ,UACfC,EAAaT,EAAQU,gBAEvBD,GACHE,MAAK,eAAgBJ,EAAKxC,KAArB,SAAkC0C,EAAW1C,KAA7C,OAKFD,4FACEN,kBAAS,IAAA0B,EAC2BC,KAAKf,MAAvCwC,EADO1B,EACP0B,WAAYC,EADL3B,EACK2B,kBACZ9C,EAASoB,KAAKf,MAAdL,KACF+C,EAAUF,EAAa,GAAM,EAEnC,OACCC,GACAA,EAAkBE,EAAA,qBAAKrD,MAAKgC,OAAAC,OAAA,GAAOjC,EAAP,CAAcoD,aAAY/C,QARvCC,aAaHgD,yBACdnB,IAAUtB,IACV6B,EACA,SAACL,EAA8BC,GAA/B,MAA+D,CAC9Da,kBAAmBd,EAAQkB,aAC3BL,WAAYZ,EAAQY,eALPI,CAOblD","file":"component---src-pages-examples-dustbin-single-target-tsx-b05b244ef56f68503ef4.js","sourcesContent":["import * as React from 'react'\nimport Dustbin from './Dustbin'\nimport Box from './Box'\n\nexport default class Container extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t\t\t<Dustbin />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\n\t\t\t\t\t<Box name=\"Glass\" />\n\t\t\t\t\t<Box name=\"Banana\" />\n\t\t\t\t\t<Box name=\"Paper\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Container from './Container'\n\nexport default (React as any).memo(() => (\n\t<div>\n\t\t<p>\n\t\t\t<b>\n\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/01%20Dustbin/Single%20Target\">\n\t\t\t\t\tBrowse the Source\n\t\t\t\t</a>\n\t\t\t</b>\n\t\t</p>\n\t\t<p>This is the simplest example there is.</p>\n\t\t<p>\n\t\t\tDrag the boxes below and drop them into the dustbin. Note that it has a\n\t\t\tneutral, an active and a hovered state. The dragged item itself changes\n\t\t\topacity while dragged.\n\t\t</p>\n\t\t<Container />\n\t</div>\n))\n","import * as React from 'react'\nimport Example from '../../../examples/01 Dustbin/Single Target'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n","export default {\n\tBOX: 'box',\n}\n","import * as React from 'react'\nimport {\n\tDropTarget,\n\tDropTargetConnector,\n\tDropTargetMonitor,\n\tConnectDropTarget,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style: React.CSSProperties = {\n\theight: '12rem',\n\twidth: '12rem',\n\tmarginRight: '1.5rem',\n\tmarginBottom: '1.5rem',\n\tcolor: 'white',\n\tpadding: '1rem',\n\ttextAlign: 'center',\n\tfontSize: '1rem',\n\tlineHeight: 'normal',\n\tfloat: 'left',\n}\n\nconst boxTarget = {\n\tdrop() {\n\t\treturn { name: 'Dustbin' }\n\t},\n}\n\nexport interface DustbinProps {\n\tcanDrop?: boolean\n\tisOver?: boolean\n\tconnectDropTarget?: ConnectDropTarget\n}\n\nclass Dustbin extends React.Component<DustbinProps> {\n\tpublic render() {\n\t\tconst { canDrop, isOver, connectDropTarget } = this.props\n\t\tconst isActive = canDrop && isOver\n\n\t\tlet backgroundColor = '#222'\n\t\tif (isActive) {\n\t\t\tbackgroundColor = 'darkgreen'\n\t\t} else if (canDrop) {\n\t\t\tbackgroundColor = 'darkkhaki'\n\t\t}\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={{ ...style, backgroundColor }}>\n\t\t\t\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport default DropTarget(\n\tItemTypes.BOX,\n\tboxTarget,\n\t(connect: DropTargetConnector, monitor: DropTargetMonitor) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t\tisOver: monitor.isOver(),\n\t\tcanDrop: monitor.canDrop(),\n\t}),\n)(Dustbin)\n","import * as React from 'react'\nimport {\n\tConnectDragSource,\n\tDragSource,\n\tDragSourceConnector,\n\tDragSourceMonitor,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style: React.CSSProperties = {\n\tborder: '1px dashed gray',\n\tbackgroundColor: 'white',\n\tpadding: '0.5rem 1rem',\n\tmarginRight: '1.5rem',\n\tmarginBottom: '1.5rem',\n\tcursor: 'move',\n\tfloat: 'left',\n}\n\nexport interface BoxProps {\n\tname: string\n\tisDragging?: boolean\n\tconnectDragSource?: ConnectDragSource\n}\n\nconst boxSource = {\n\tbeginDrag(props: BoxProps) {\n\t\treturn {\n\t\t\tname: props.name,\n\t\t}\n\t},\n\n\tendDrag(props: BoxProps, monitor: DragSourceMonitor) {\n\t\tconst item = monitor.getItem()\n\t\tconst dropResult = monitor.getDropResult()\n\n\t\tif (dropResult) {\n\t\t\talert(`You dropped ${item.name} into ${dropResult.name}!`)\n\t\t}\n\t},\n}\n\nclass Box extends React.Component<BoxProps> {\n\tpublic render() {\n\t\tconst { isDragging, connectDragSource } = this.props\n\t\tconst { name } = this.props\n\t\tconst opacity = isDragging ? 0.4 : 1\n\n\t\treturn (\n\t\t\tconnectDragSource &&\n\t\t\tconnectDragSource(<div style={{ ...style, opacity }}>{name}</div>)\n\t\t)\n\t}\n}\n\nexport default DragSource(\n\tItemTypes.BOX,\n\tboxSource,\n\t(connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n\t\tconnectDragSource: connect.dragSource(),\n\t\tisDragging: monitor.isDragging(),\n\t}),\n)(Box)\n"],"sourceRoot":""}