{"version":3,"sources":["webpack:///./src/examples/03 Nesting/Drag Sources/Colors.ts","webpack:///./src/examples/03 Nesting/Drag Sources/SourceBox.tsx","webpack:///./src/examples/03 Nesting/Drag Sources/TargetBox.tsx","webpack:///./src/examples/03 Nesting/Drag Sources/Container.tsx","webpack:///./src/examples/03 Nesting/Drag Sources/index.tsx","webpack:///./src/pages/examples/nesting/drag-sources.tsx"],"names":["Colors","style","border","padding","margin","SourceBoxRaw","render","backgroundColor","_this$props","this","props","color","children","isDragging","connectDragSource","forbidDrag","onToggleForbidDrag","opacity","react","Object","assign","cursor","type","checked","onChange","React","SourceBox","DragSource","canDrag","beginDrag","connect","monitor","dragSource","StatefulSourceBox","_this","_React$Component2","call","state","_this2","handleToggleForbidDrag","setState","height","width","textAlign","TargetBoxRaw","canDrop","isOver","draggingColor","lastDroppedColor","connectDropTarget","TargetBox","DropTarget","drop","onDrop","getItemType","dropTarget","StatefulTargetBox","handleDrop","Container","overflow","clear","float","SourceBox_StatefulSourceBox","marginLeft","marginTop","TargetBox_StatefulTargetBox","NestingDragSources","href","Container_Container","__webpack_exports__","layout","Drag_Sources_NestingDragSources"],"mappings":"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","file":"component---src-pages-examples-nesting-drag-sources-tsx-1d059ebc6bebf55e990f.js","sourcesContent":["export default {\n\tYELLOW: 'yellow',\n\tBLUE: 'blue',\n}\n","// tslint:disable max-classes-per-file jsx-no-lambda\nimport * as React from 'react'\nimport {\n\tDragSource,\n\tConnectDragSource,\n\tDragSourceMonitor,\n\tDragSourceConnector,\n} from 'react-dnd'\nimport Colors from './Colors'\n\nconst style: React.CSSProperties = {\n\tborder: '1px dashed gray',\n\tpadding: '0.5rem',\n\tmargin: '0.5rem',\n}\n\nconst ColorSource = {\n\tcanDrag(props: SourceBoxProps) {\n\t\treturn !props.forbidDrag\n\t},\n\n\tbeginDrag() {\n\t\treturn {}\n\t},\n}\n\nexport interface SourceBoxProps {\n\tconnectDragSource?: ConnectDragSource\n\tisDragging?: boolean\n\tcolor?: string\n\tforbidDrag?: boolean\n\tonToggleForbidDrag?: () => void\n}\n\nclass SourceBoxRaw extends React.Component<SourceBoxProps> {\n\tpublic render() {\n\t\tconst {\n\t\t\tcolor,\n\t\t\tchildren,\n\t\t\tisDragging,\n\t\t\tconnectDragSource,\n\t\t\tforbidDrag,\n\t\t\tonToggleForbidDrag,\n\t\t} = this.props\n\t\tconst opacity = isDragging ? 0.4 : 1\n\n\t\tlet backgroundColor\n\t\tswitch (color) {\n\t\t\tcase Colors.YELLOW:\n\t\t\t\tbackgroundColor = 'lightgoldenrodyellow'\n\t\t\t\tbreak\n\t\t\tcase Colors.BLUE:\n\t\t\t\tbackgroundColor = 'lightblue'\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn (\n\t\t\tconnectDragSource &&\n\t\t\tconnectDragSource(\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...style,\n\t\t\t\t\t\tbackgroundColor,\n\t\t\t\t\t\topacity,\n\t\t\t\t\t\tcursor: forbidDrag ? 'default' : 'move',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={forbidDrag}\n\t\t\t\t\t\tonChange={onToggleForbidDrag}\n\t\t\t\t\t/>\n\t\t\t\t\t<small>Forbid drag</small>\n\t\t\t\t\t{children}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nconst SourceBox = DragSource(\n\t(props: SourceBoxProps) => props.color + '',\n\tColorSource,\n\t(connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n\t\tconnectDragSource: connect.dragSource(),\n\t\tisDragging: monitor.isDragging(),\n\t}),\n)(SourceBoxRaw)\n\nexport interface StatefulSourceBoxProps {\n\tcolor: string\n}\n\nexport interface StatefulSourceBoxState {\n\tforbidDrag: boolean\n}\nexport default class StatefulSourceBox extends React.Component<\n\tStatefulSourceBoxProps,\n\tStatefulSourceBoxState\n> {\n\tconstructor(props: StatefulSourceBoxProps) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tforbidDrag: false,\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<SourceBox\n\t\t\t\t{...this.props}\n\t\t\t\tforbidDrag={this.state.forbidDrag}\n\t\t\t\tonToggleForbidDrag={() => this.handleToggleForbidDrag()}\n\t\t\t/>\n\t\t)\n\t}\n\n\tprivate handleToggleForbidDrag() {\n\t\tthis.setState({\n\t\t\tforbidDrag: !this.state.forbidDrag,\n\t\t})\n\t}\n}\n","// tslint:disable max-classes-per-file\nimport * as React from 'react'\nimport { DropTarget, ConnectDropTarget, DropTargetMonitor } from 'react-dnd'\nimport Colors from './Colors'\n\nconst style: React.CSSProperties = {\n\tborder: '1px solid gray',\n\theight: '15rem',\n\twidth: '15rem',\n\tpadding: '2rem',\n\ttextAlign: 'center',\n}\n\nconst ColorTarget = {\n\tdrop(props: TargetBoxProps, monitor: DropTargetMonitor) {\n\t\tprops.onDrop(monitor.getItemType())\n\t},\n}\n\nexport interface TargetBoxProps {\n\tisOver?: boolean\n\tcanDrop?: boolean\n\tdraggingColor?: string\n\tlastDroppedColor?: string\n\tconnectDropTarget?: ConnectDropTarget\n\tonDrop: (item: any) => void\n}\n\nclass TargetBoxRaw extends React.Component<TargetBoxProps> {\n\tpublic render() {\n\t\tconst {\n\t\t\tcanDrop,\n\t\t\tisOver,\n\t\t\tdraggingColor,\n\t\t\tlastDroppedColor,\n\t\t\tconnectDropTarget,\n\t\t} = this.props\n\t\tconst opacity = isOver ? 1 : 0.7\n\n\t\tlet backgroundColor = '#fff'\n\t\tswitch (draggingColor) {\n\t\t\tcase Colors.BLUE:\n\t\t\t\tbackgroundColor = 'lightblue'\n\t\t\t\tbreak\n\t\t\tcase Colors.YELLOW:\n\t\t\t\tbackgroundColor = 'lightgoldenrodyellow'\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={{ ...style, backgroundColor, opacity }}>\n\t\t\t\t\t<p>Drop here.</p>\n\n\t\t\t\t\t{!canDrop &&\n\t\t\t\t\t\tlastDroppedColor && <p>Last dropped: {lastDroppedColor}</p>}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nconst TargetBox = DropTarget(\n\t[Colors.YELLOW, Colors.BLUE],\n\tColorTarget,\n\t(connect, monitor) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t\tisOver: monitor.isOver(),\n\t\tcanDrop: monitor.canDrop(),\n\t\tdraggingColor: monitor.getItemType(),\n\t}),\n)(TargetBoxRaw)\n\nexport interface StatefulTargetBoxState {\n\tlastDroppedColor: string | null\n}\nexport default class StatefulTargetBox extends React.Component<\n\t{},\n\tStatefulTargetBoxState\n> {\n\tconstructor(props: {}) {\n\t\tsuper(props)\n\t\tthis.state = { lastDroppedColor: null }\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<TargetBox\n\t\t\t\t{...this.props}\n\t\t\t\tlastDroppedColor={this.state.lastDroppedColor as string}\n\t\t\t\tonDrop={((color: any) => this.handleDrop(color)) as any}\n\t\t\t/>\n\t\t)\n\t}\n\n\tprivate handleDrop(color: string) {\n\t\tthis.setState({\n\t\t\tlastDroppedColor: color,\n\t\t})\n\t}\n}\n","import * as React from 'react'\nimport SourceBox from './SourceBox'\nimport TargetBox from './TargetBox'\nimport Colors from './Colors'\n\nexport default class Container extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both', margin: '-.5rem' }}>\n\t\t\t\t<div style={{ float: 'left' }}>\n\t\t\t\t\t<SourceBox color={Colors.BLUE}>\n\t\t\t\t\t\t<SourceBox color={Colors.YELLOW}>\n\t\t\t\t\t\t\t<SourceBox color={Colors.YELLOW} />\n\t\t\t\t\t\t\t<SourceBox color={Colors.BLUE} />\n\t\t\t\t\t\t</SourceBox>\n\t\t\t\t\t\t<SourceBox color={Colors.BLUE}>\n\t\t\t\t\t\t\t<SourceBox color={Colors.YELLOW} />\n\t\t\t\t\t\t</SourceBox>\n\t\t\t\t\t</SourceBox>\n\t\t\t\t</div>\n\n\t\t\t\t<div style={{ float: 'left', marginLeft: '5rem', marginTop: '.5rem' }}>\n\t\t\t\t\t<TargetBox />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Container from './Container'\n\nexport default class NestingDragSources extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/03%20Nesting/Drag%20Sources\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tYou can nest the drag sources in one another. If a nested drag source\n\t\t\t\t\treturns <code>false</code> from <code>canDrag</code>, its parent will\n\t\t\t\t\tbe asked, until a draggable source is found and activated. Only the\n\t\t\t\t\tactivated drag source will have its <code>beginDrag()</code> and{' '}\n\t\t\t\t\t<code>endDrag()</code> called.\n\t\t\t\t</p>\n\t\t\t\t<Container />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/03 Nesting/Drag Sources'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n"],"sourceRoot":""}