{"version":3,"sources":["webpack:///./src/examples/06 Other/Native Files/TargetBox.tsx","webpack:///./src/examples/06 Other/Native Files/FileList.tsx","webpack:///./src/examples/06 Other/Native Files/Container.tsx","webpack:///./src/examples/06 Other/Native Files/index.tsx","webpack:///./src/pages/examples/other/native-files.tsx"],"names":["style","border","height","width","padding","textAlign","TargetBox","render","_this$props","this","props","canDrop","isOver","connectDropTarget","isActive","react","React","DropTarget","accepts","drop","monitor","onDrop","connect","dropTarget","FileList","files","length","list","map","file","key","name","size","type","label","Container","_this","_React$Component","call","handleFileDrop","bind","assertThisInitialized_default","state","droppedFiles","FILE","NativeTypes","Native_Files_TargetBox","FileList_FileList","item","getItem","setState","NativeFiles","href","Container_Container","__webpack_exports__","layout","Native_Files_NativeFiles"],"mappings":"yKAQMA,EAA6B,CAClCC,OAAQ,iBACRC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,UAAW,UAmBNC,4FACEC,kBAAS,IAAAC,EACgCC,KAAKC,MAA5CC,EADOH,EACPG,QAASC,EADFJ,EACEI,OAAQC,EADVL,EACUK,kBACnBC,EAAWH,GAAWC,EAE5B,OACCC,GACAA,EACCE,EAAA,qBAAKf,MAAOA,GACVc,EAAW,kBAAoB,uBATbE,aAgBTC,uBACd,SAACP,GAAD,OAA2BA,EAAMQ,SAjChB,CACjBC,KADiB,SACZT,EAAuBU,GACvBV,EAAMW,QACTX,EAAMW,OAAOX,EAAOU,KAgCtB,SAACE,EAA8BF,GAA/B,MAA+D,CAC9DP,kBAAmBS,EAAQC,aAC3BX,OAAQQ,EAAQR,SAChBD,QAASS,EAAQT,YANJM,CAQbX,GClDmBkB,kHACbjB,kBAAS,IACPkB,EAAUhB,KAAKC,MAAfe,MACR,OAAqB,IAAjBA,EAAMC,OACFX,EAAA,+CAEDA,EAAA,yBAAMN,KAAKkB,KAAKF,OAGhBE,cAAKF,GAGZ,OAAOA,EAAMG,IAAI,SAAAC,GAAI,OAAId,EAAA,oBAAIe,IAAKD,EAAKE,MAFzB,SAACF,GAAD,UACTA,EAAKE,KADI,cACcF,EAAKG,KADnB,eACsCH,EAAKI,KAD3C,IAEgCC,CAAML,UAZhBb,cCIjBmB,cACpB,SAAAA,EAAYzB,GAAW,IAAA0B,EAAA,OACtBA,EAAAC,EAAAC,KAAA7B,KAAMC,IAAND,MACK8B,eAAiBH,EAAKG,eAAeC,KAApBC,QAAAL,KACtBA,EAAKM,MAAQ,CAAEC,aAAc,IAHPP,sCAMhB7B,kBAAS,IACPqC,EAASC,cAATD,KACAD,EAAiBlC,KAAKiC,MAAtBC,aAER,OACC5B,EAAA,cAAAA,EAAA,cACCA,EAAA,cAAC+B,EAAD,CAAW5B,QAAS,CAAC0B,GAAOvB,OAAQZ,KAAK8B,iBACzCxB,EAAA,cAACgC,EAAD,CAAUtB,MAAOkB,QAKZJ,wBAAeS,EAAW5B,GACjC,GAAIA,EAAS,CACZ,IAAMuB,EAAevB,EAAQ6B,UAAUxB,MACvChB,KAAKyC,SAAS,CAAEP,sBAtBoB3B,aCPlBmC,4FACb5C,kBACN,OACCQ,EAAA,yBACCA,EAAA,uBACCA,EAAA,uBACCA,EAAA,mBAAGqC,KAAK,oHAAR,uBAKFrC,EAAA,+EACAA,EAAA,cAACsC,EAAD,WAZqCrC,sBCC1BsC,EAAA,iBAAC5C,GAAD,OACdK,EAAA,cAACwC,EAAA,EAAW7C,EACXK,EAAA,cAACyC,EAAD","file":"component---src-pages-examples-other-native-files-tsx-8fc8bea3bb822a220373.js","sourcesContent":["import * as React from 'react'\nimport {\n\tDropTarget,\n\tDropTargetConnector,\n\tConnectDropTarget,\n\tDropTargetMonitor,\n} from 'react-dnd'\n\nconst style: React.CSSProperties = {\n\tborder: '1px solid gray',\n\theight: '15rem',\n\twidth: '15rem',\n\tpadding: '2rem',\n\ttextAlign: 'center',\n}\n\nconst boxTarget = {\n\tdrop(props: TargetBoxProps, monitor: DropTargetMonitor) {\n\t\tif (props.onDrop) {\n\t\t\tprops.onDrop(props, monitor)\n\t\t}\n\t},\n}\n\nexport interface TargetBoxProps {\n\taccepts: string[]\n\tconnectDropTarget?: ConnectDropTarget\n\tisOver?: boolean\n\tcanDrop?: boolean\n\tonDrop: (props: TargetBoxProps, monitor: DropTargetMonitor) => void\n}\n\nclass TargetBox extends React.Component<TargetBoxProps> {\n\tpublic render() {\n\t\tconst { canDrop, isOver, connectDropTarget } = this.props\n\t\tconst isActive = canDrop && isOver\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={style}>\n\t\t\t\t\t{isActive ? 'Release to drop' : 'Drag file here'}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport default DropTarget(\n\t(props: TargetBoxProps) => props.accepts,\n\tboxTarget,\n\t(connect: DropTargetConnector, monitor: DropTargetMonitor) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t\tisOver: monitor.isOver(),\n\t\tcanDrop: monitor.canDrop(),\n\t}),\n)(TargetBox)\n","import * as React from 'react'\n\nexport interface FileListProps {\n\tfiles: any[]\n}\n\nexport default class FileList extends React.Component<FileListProps> {\n\tpublic render() {\n\t\tconst { files } = this.props\n\t\tif (files.length === 0) {\n\t\t\treturn <div>Nothing to display</div>\n\t\t}\n\t\treturn <div>{this.list(files)}</div>\n\t}\n\n\tprivate list(files: any[]) {\n\t\tconst label = (file: { size: string; name: string; type: string }) =>\n\t\t\t`'${file.name}' of size '${file.size}' and type '${file.type}'`\n\t\treturn files.map(file => <li key={file.name}>{label(file)}</li>)\n\t}\n}\n","import * as React from 'react'\nimport { DropTargetMonitor } from 'react-dnd'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport TargetBox from './TargetBox'\nimport FileList from './FileList'\n\nexport interface ContainerState {\n\tdroppedFiles: any[]\n}\n\nexport default class Container extends React.Component<{}, ContainerState> {\n\tconstructor(props: {}) {\n\t\tsuper(props)\n\t\tthis.handleFileDrop = this.handleFileDrop.bind(this)\n\t\tthis.state = { droppedFiles: [] }\n\t}\n\n\tpublic render() {\n\t\tconst { FILE } = NativeTypes\n\t\tconst { droppedFiles } = this.state\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TargetBox accepts={[FILE]} onDrop={this.handleFileDrop} />\n\t\t\t\t<FileList files={droppedFiles} />\n\t\t\t</>\n\t\t)\n\t}\n\n\tprivate handleFileDrop(item: any, monitor: DropTargetMonitor) {\n\t\tif (monitor) {\n\t\t\tconst droppedFiles = monitor.getItem().files\n\t\t\tthis.setState({ droppedFiles })\n\t\t}\n\t}\n}\n","import * as React from 'react'\nimport Container from './Container'\n\nexport default class NativeFiles extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/06%20Other/Native%20Files\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>Example demonstrating drag and drop of native files.</p>\n\t\t\t\t<Container />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/06 Other/Native Files'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n"],"sourceRoot":""}