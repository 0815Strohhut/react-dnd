{"version":3,"sources":["webpack:///./src/examples/02 Drag Around/Naive/ItemTypes.ts","webpack:///./src/examples/02 Drag Around/Naive/Box.tsx","webpack:///./src/examples/02 Drag Around/Naive/Container.tsx","webpack:///./src/examples/02 Drag Around/Naive/index.tsx","webpack:///./src/pages/examples/drag-around/naive.tsx","webpack:////Users/christrevino/Workspace/react-dnd/node_modules/immutability-helper/index.js"],"names":["ItemTypes","style","position","border","backgroundColor","padding","cursor","Box","render","_this$props","this","props","hideSourceOnDrag","left","top","connectDragSource","isDragging","children","react","Object","assign","React","DragSource","beginDrag","id","connect","monitor","dragSource","update","require","styles","width","height","boxTarget","drop","component","item","getItem","delta","getDifferenceFromInitialOffset","Math","round","x","y","moveBox","Container","_this","_React$Component","call","state","boxes","a","title","b","connectDropTarget","keys","map","key","_boxes$key","Naive_Box","_boxes","setState","$merge","DropTarget","dropTarget","DragAroundNaive","handleHideSourceClick","bind","assertThisInitialized_default","href","Naive_Container","htmlFor","type","checked","onChange","__webpack_exports__","layout","Naive_DragAroundNaive","invariant","__webpack_require__","hasOwnProperty","prototype","splice","Array","toString","obj","slice","target","source","getAllKeys","forEach","getOwnPropertySymbols","concat","copy","object","isArray","constructor","length","Map","Set","getPrototypeOf","create","newContext","commands","defaultCommands","extend","directive","fn","isEquals","spec","$apply","join","nextObject","objectWasNextObject","nextValueForKey","get","nextObjectValue","set","$push","value","invariantPushAndUnshift","$unshift","$splice","originalObject","invariantSplice","invariantSplices","args","apply","$set","invariantSet","$toggle","targets","invariantSpecArray","nextObjectCopy","$unset","$add","invariantMapOrSet","pair","has","add","$remove","delete","specValue","original","contextForExport","command","typeOfTarget","module","exports","default"],"mappings":"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","file":"component---src-pages-examples-drag-around-naive-tsx-67ae7e49225f3e549e98.js","sourcesContent":["export default {\n\tBOX: 'box',\n}\n","import * as React from 'react'\nimport { DragSource, ConnectDragSource } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style: React.CSSProperties = {\n\tposition: 'absolute',\n\tborder: '1px dashed gray',\n\tbackgroundColor: 'white',\n\tpadding: '0.5rem 1rem',\n\tcursor: 'move',\n}\n\nconst boxSource = {\n\tbeginDrag(props: BoxProps) {\n\t\tconst { id, left, top } = props\n\t\treturn { id, left, top }\n\t},\n}\n\nexport interface BoxProps {\n\tconnectDragSource?: ConnectDragSource\n\tisDragging?: boolean\n\tid?: any\n\tleft?: number\n\ttop?: number\n\thideSourceOnDrag?: any\n}\n\nclass Box extends React.Component<BoxProps> {\n\tpublic render() {\n\t\tconst {\n\t\t\thideSourceOnDrag,\n\t\t\tleft,\n\t\t\ttop,\n\t\t\tconnectDragSource,\n\t\t\tisDragging,\n\t\t\tchildren,\n\t\t} = this.props\n\t\tif (isDragging && hideSourceOnDrag) {\n\t\t\treturn null\n\t\t}\n\n\t\treturn (\n\t\t\tconnectDragSource &&\n\t\t\tconnectDragSource(<div style={{ ...style, left, top }}>{children}</div>)\n\t\t)\n\t}\n}\n\nexport default DragSource(ItemTypes.BOX, boxSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n\tisDragging: monitor.isDragging(),\n}))(Box)\n","import * as React from 'react'\nimport {\n\tDropTarget,\n\tConnectDropTarget,\n\tDropTargetMonitor,\n\tXYCoord,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport Box from './Box'\nconst update = require('immutability-helper')\n\nconst styles: React.CSSProperties = {\n\twidth: 300,\n\theight: 300,\n\tborder: '1px solid black',\n\tposition: 'relative',\n}\n\nconst boxTarget = {\n\tdrop(\n\t\tprops: ContainerProps,\n\t\tmonitor: DropTargetMonitor,\n\t\tcomponent: Container | null,\n\t) {\n\t\tif (!component) {\n\t\t\treturn\n\t\t}\n\t\tconst item = monitor.getItem()\n\t\tconst delta = monitor.getDifferenceFromInitialOffset() as XYCoord\n\t\tconst left = Math.round(item.left + delta.x)\n\t\tconst top = Math.round(item.top + delta.y)\n\n\t\tcomponent.moveBox(item.id, left, top)\n\t},\n}\n\nexport interface ContainerProps {\n\thideSourceOnDrag: boolean\n\tconnectDropTarget?: ConnectDropTarget\n}\n\nexport interface ContainerState {\n\tboxes: { [key: string]: { top: number; left: number; title: string } }\n}\n\nclass Container extends React.Component<ContainerProps, ContainerState> {\n\tconstructor(props: ContainerProps) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tboxes: {\n\t\t\t\ta: { top: 20, left: 80, title: 'Drag me around' },\n\t\t\t\tb: { top: 180, left: 20, title: 'Drag me too' },\n\t\t\t},\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst { hideSourceOnDrag, connectDropTarget } = this.props\n\t\tconst { boxes } = this.state\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={styles}>\n\t\t\t\t\t{Object.keys(boxes).map(key => {\n\t\t\t\t\t\tconst { left, top, title } = boxes[key]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tid={key}\n\t\t\t\t\t\t\t\tleft={left}\n\t\t\t\t\t\t\t\ttop={top}\n\t\t\t\t\t\t\t\thideSourceOnDrag={hideSourceOnDrag}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n\n\tpublic moveBox(id: string, left: number, top: number) {\n\t\tthis.setState(\n\t\t\tupdate(this.state, {\n\t\t\t\tboxes: {\n\t\t\t\t\t[id]: {\n\t\t\t\t\t\t$merge: { left, top },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t}\n}\n\nexport default DropTarget(ItemTypes.BOX, boxTarget, (connect: any) => ({\n\tconnectDropTarget: connect.dropTarget(),\n}))(Container)\n","import * as React from 'react'\nimport Container from './Container'\n\nexport interface DragAroundNaiveState {\n\thideSourceOnDrag: boolean\n}\n\nexport default class DragAroundNaive extends React.Component<\n\t{},\n\tDragAroundNaiveState\n> {\n\tconstructor(props: {}) {\n\t\tsuper(props)\n\t\tthis.handleHideSourceClick = this.handleHideSourceClick.bind(this)\n\t\tthis.state = {\n\t\t\thideSourceOnDrag: true,\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst { hideSourceOnDrag } = this.state\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/02%20Drag%20Around/Naive\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tThis example naively relies on browser drag and drop implementation\n\t\t\t\t\twithout much custom logic.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tWhen the box is dragged, we remove its original DOM node by returning{' '}\n\t\t\t\t\t<code>null</code> from <code>render()</code> and let browser draw the\n\t\t\t\t\tdrag preview. When the is released, we draw it at the new coordinates.\n\t\t\t\t\tIf you try to drag the box outside the container, the browser will\n\t\t\t\t\tanimate its return.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tWhile this approach works for simple cases, it flickers on drop. This\n\t\t\t\t\thappens because the browser removes the drag preview before we have a\n\t\t\t\t\tchance to make the dragged item visible. This might not be a problem\n\t\t\t\t\tif you dim the original item instead of hiding it, but it&apos;s\n\t\t\t\t\tclearly visible otherwise.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tIf we want to add custom logic such as snapping to grid or bounds\n\t\t\t\t\tchecking, we can only do this on drop. There is no way for us to\n\t\t\t\t\tcontrol what happens to dragged preview once the browser has drawn it.\n\t\t\t\t\tCheck out the{' '}\n\t\t\t\t\t<a href=\"examples-drag-around-custom-drag-layer.html\">\n\t\t\t\t\t\tcustom rendering example\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tif you&apos;d rather trade more control for some more work.\n\t\t\t\t</p>\n\t\t\t\t<Container hideSourceOnDrag={hideSourceOnDrag} />\n\t\t\t\t<p>\n\t\t\t\t\t<label htmlFor=\"hideSourceOnDrag\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"hideSourceOnDrag\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={hideSourceOnDrag}\n\t\t\t\t\t\t\tonChange={this.handleHideSourceClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>Hide the source item while dragging</small>\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tprivate handleHideSourceClick() {\n\t\tthis.setState({\n\t\t\thideSourceOnDrag: !this.state.hideSourceOnDrag,\n\t\t})\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/02 Drag Around/Naive'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n","var invariant = require('invariant');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar toString = Object.prototype.toString\nvar type = function(obj) {\n  return toString.call(obj).slice(8, -1);\n}\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (Array.isArray(object)) {\n    return assign(object.constructor(object.length), object)\n  } else if (type(object) === 'Map') {\n    return new Map(object)\n  } else if (type(object) === 'Set') {\n    return new Set(object)\n  } else if (object && typeof object === 'object') {\n    var prototype = Object.getPrototypeOf(object);\n    return assign(Object.create(prototype), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (typeof spec === 'function') {\n      spec = { $apply: spec };\n    }\n\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey =\n          type(object) === 'Map'\n            ? update(object.get(key), spec[key])\n            : update(object[key], spec[key]);\n        var nextObjectValue =\n          type(nextObject) === 'Map'\n              ? nextObject.get(key)\n              : nextObject[key];\n        if (!update.isEquals(nextValueForKey, nextObjectValue) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          if (type(nextObject) === 'Map') {\n            nextObject.set(key, nextValueForKey);\n          } else {\n            nextObject[key] = nextValueForKey;\n          }\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $toggle: function(targets, nextObject) {\n    invariantSpecArray(targets, '$toggle');\n    var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n\n    targets.forEach(function(target) {\n      nextObjectCopy[target] = !nextObject[target];\n    });\n\n    return nextObjectCopy;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariantSpecArray(value, '$unset');\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $add: function(value, nextObject, spec, originalObject) {\n    invariantMapOrSet(nextObject, '$add');\n    invariantSpecArray(value, '$add');\n    if (type(nextObject) === 'Map') {\n      value.forEach(function(pair) {\n        var key = pair[0];\n        var value = pair[1];\n        if (nextObject === originalObject && nextObject.get(key) !== value) nextObject = copy(originalObject);\n        nextObject.set(key, value);\n      });\n    } else {\n      value.forEach(function(value) {\n        if (nextObject === originalObject && !nextObject.has(value)) nextObject = copy(originalObject);\n        nextObject.add(value);\n      });\n    }\n    return nextObject;\n  },\n  $remove: function(value, nextObject, spec, originalObject) {\n    invariantMapOrSet(nextObject, '$remove');\n    invariantSpecArray(value, '$remove');\n    value.forEach(function(key) {\n      if (nextObject === originalObject && nextObject.has(key)) nextObject = copy(originalObject);\n      nextObject.delete(key);\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nvar contextForExport = newContext();\n\nmodule.exports = contextForExport;\nmodule.exports.default = contextForExport;\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  invariantSpecArray(spec[command], command)\n}\n\nfunction invariantSpecArray(spec, command) {\n  invariant(\n    Array.isArray(spec),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    spec\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\nfunction invariantMapOrSet(target, command) {\n  var typeOfTarget = type(target);\n  invariant(\n    typeOfTarget === 'Map' || typeOfTarget === 'Set',\n    'update(): %s expects a target of type Set or Map; got %s',\n    command,\n    typeOfTarget\n  );\n}\n"],"sourceRoot":""}