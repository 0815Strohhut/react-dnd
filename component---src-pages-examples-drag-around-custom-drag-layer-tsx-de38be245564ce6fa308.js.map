{"version":3,"sources":["webpack:///./src/examples/02 Drag Around/Custom Drag Layer/ItemTypes.ts","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/Box.tsx","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/DraggableBox.tsx","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/snapToGrid.ts","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/Container.tsx","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/BoxDragPreview.tsx","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/CustomDragLayer.tsx","webpack:///./src/examples/02 Drag Around/Custom Drag Layer/index.tsx","webpack:///./src/pages/examples/drag-around/custom-drag-layer.tsx","webpack:////Users/christrevino/Workspace/react-dnd/node_modules/immutability-helper/index.js"],"names":["ItemTypes","BOX","styles","border","padding","cursor","Box","render","_this$props","this","props","title","backgroundColor","yellow","react","style","Object","assign","React","DraggableBox","componentDidMount","connectDragPreview","getEmptyImage","captureDraggingState","left","top","isDragging","transform","connectDragSource","position","WebkitTransform","opacity","height","Box_Box","DragSource","beginDrag","id","connect","monitor","dragSource","dragPreview","snapToGrid","x","y","Math","round","update","require","width","boxTarget","drop","component","delta","getDifferenceFromInitialOffset","item","getItem","_snapToGrid","moveBox","Container","_this","_React$PureComponent","call","state","boxes","a","b","_this2","connectDropTarget","keys","map","key","renderBox","_boxes","setState","$merge","Custom_Drag_Layer_DraggableBox","DropTarget","dropTarget","display","BoxDragPreview","tick","bind","assertThisInitialized_default","tickTock","interval","setInterval","componentWillUnmount","clearInterval","layerStyles","pointerEvents","zIndex","DragLayer","itemType","getItemType","initialOffset","getInitialSourceClientOffset","currentOffset","getSourceClientOffset","getItemStyles","BoxDragPreview_BoxDragPreview","renderItem","DragAroundCustomDragLayer","_React$Component","handleSnapToGridAfterDropChange","handleSnapToGridWhileDraggingChange","snapToGridAfterDrop","snapToGridWhileDragging","_this$state","href","Custom_Drag_Layer_Container","Custom_Drag_Layer_CustomDragLayer","htmlFor","type","checked","onChange","__webpack_exports__","layout","Custom_Drag_Layer_DragAroundCustomDragLayer","invariant","__webpack_require__","hasOwnProperty","prototype","splice","Array","toString","obj","slice","target","source","getAllKeys","forEach","getOwnPropertySymbols","concat","copy","object","isArray","constructor","length","Map","Set","getPrototypeOf","create","newContext","commands","defaultCommands","extend","directive","fn","isEquals","spec","$apply","join","nextObject","objectWasNextObject","nextValueForKey","get","nextObjectValue","set","$push","value","invariantPushAndUnshift","$unshift","$splice","originalObject","invariantSplice","invariantSplices","args","apply","$set","invariantSet","$toggle","targets","invariantSpecArray","nextObjectCopy","$unset","$add","invariantMapOrSet","pair","has","add","$remove","delete","specValue","original","contextForExport","command","typeOfTarget","module","exports","default"],"mappings":"gMAAeA,EAAA,CACdC,IAAK,gBCCAC,EAA8B,CACnCC,OAAQ,kBACRC,QAAS,cACTC,OAAQ,QAQYC,4FACbC,kBAAS,IAAAC,EACWC,KAAKC,MAAvBC,EADOH,EACPG,MACFC,EAFSJ,EACAK,OACkB,SAAW,QAE5C,OAAOC,EAAA,qBAAKC,MAAKC,OAAAC,OAAA,GAAOf,EAAP,CAAeU,qBAAoBD,OALrBO,qBCyB3BC,oGACEC,6BAAoB,IAClBC,EAAuBZ,KAAKC,MAA5BW,mBACJA,GAGHA,EAAmBC,0BAAiB,CAGnCC,sBAAsB,OAKlBhB,kBAAS,IAvCEG,EACVc,EAAMC,EAAKC,EACbC,EAqCUnB,EACsBC,KAAKC,MAAlCC,EADOH,EACPG,MAAOiB,EADApB,EACAoB,kBAEf,OACCA,GACAA,EACCd,EAAA,qBAAKC,OA7CUL,EA6COD,KAAKC,MA5CtBc,EAA0Bd,EAA1Bc,KAAMC,EAAoBf,EAApBe,IAAKC,EAAehB,EAAfgB,WACbC,EAAS,eAAkBH,EAAlB,OAA6BC,EAA7B,SAER,CACNI,SAAU,WACVF,YACAG,gBAAiBH,EAGjBI,QAASL,EAAa,EAAI,EAC1BM,OAAQN,EAAa,EAAI,MAmCtBZ,EAAA,cAACmB,EAAD,CAAKtB,MAAOA,UArBUO,iBA4BZgB,uBAAWlC,EAAUC,IA5DlB,CACjBkC,UADiB,SACPzB,GAET,MAAO,CAAE0B,GADwB1B,EAAzB0B,GACKzB,MADoBD,EAArBC,MACQa,KADad,EAAdc,KACOC,IADOf,EAARe,OA0DyB,SAACY,EAASC,GAAV,MAAuB,CAC1EV,kBAAmBS,EAAQE,aAC3BlB,mBAAoBgB,EAAQG,cAC5Bd,WAAYY,EAAQZ,eAHNQ,CAIXf,GCtEW,SAASsB,EAAWC,EAAWC,GAG7C,MAAO,CAF+B,GAArBC,KAAKC,MAAMH,EAAI,IACM,GAArBE,KAAKC,MAAMF,EAAI,KCQjC,IAAMG,EAASC,EAAQ,KAEjB7C,EAA8B,CACnC8C,MAAO,IACPhB,OAAQ,IACR7B,OAAQ,kBACR0B,SAAU,YAGLoB,EAAY,CACjBC,KADiB,SAEhBxC,EACA4B,EACAa,GAEA,GAAKA,EAAL,CAGA,IAAMC,EAAQd,EAAQe,iCAIhBC,EAAOhB,EAAQiB,UAEjB/B,EAAOoB,KAAKC,MAAMS,EAAK9B,KAAO4B,EAAMV,GACpCjB,EAAMmB,KAAKC,MAAMS,EAAK7B,IAAM2B,EAAMT,GACtC,GAAIjC,EAAM+B,WAAY,KAAAe,EACNf,EAAWjB,EAAMC,GAA9BD,EADmBgC,EAAA,GACb/B,EADa+B,EAAA,GAItBL,EAAUM,QAAQH,EAAKlB,GAAIZ,EAAMC,MAa7BiC,cACL,SAAAA,EAAYhD,GAAuB,IAAAiD,EAAA,OAClCA,EAAAC,EAAAC,KAAApD,KAAMC,IAAND,MACKqD,MAAQ,CACZC,MAAO,CACNC,EAAG,CAAEvC,IAAK,GAAID,KAAM,GAAIb,MAAO,kBAC/BsD,EAAG,CAAExC,IAAK,IAAKD,KAAM,GAAIb,MAAO,iBALAgD,sCAU5BpD,kBAAS,IAAA2D,EAAAzD,KACP0D,EAAsB1D,KAAKC,MAA3ByD,kBACAJ,EAAUtD,KAAKqD,MAAfC,MAER,OACCI,GACAA,EACCrD,EAAA,qBAAKC,MAAOb,GACVc,OAAOoD,KAAKL,GAAOM,IAAI,SAAAC,GAAG,OAAIJ,EAAKK,UAAUR,EAAMO,GAAMA,UAMvDb,iBAAQrB,EAAYZ,EAAcC,GAAa,IAAA+C,EACrD/D,KAAKgE,SACJ3B,EAAOrC,KAAKqD,MAAO,CAClBC,OAAKS,EAAA,GAAAA,EACHpC,GAAK,CACLsC,OAAQ,CAAElD,OAAMC,QAFb+C,SASAD,mBAAUjB,EAAWgB,GAC5B,OAAOxD,EAAA,cAAC6D,EAAD3D,OAAAC,OAAA,CAAcqD,IAAKA,EAAKlC,GAAIkC,GAAShB,QAtCtBpC,iBA0CT0D,uBACd5E,EAAUC,IACVgD,EACA,SAACZ,GAAD,MAAmC,CAClC8B,kBAAmB9B,EAAQwC,eAJdD,CAMblB,GClGIxD,EAAS,CACd4E,QAAS,eACTnD,UAAW,gBACXG,gBAAiB,iBAWGiD,cAMpB,SAAAA,EAAYrE,GAA4B,IAAAiD,EAAA,OACvCA,EAAAC,EAAAC,KAAApD,KAAMC,IAAND,MACKuE,KAAOrB,EAAKqB,KAAKC,KAAVC,QAAAvB,KACZA,EAAKG,MAAQ,CACZqB,UAAU,GAJ4BxB,sCAQjCvC,6BACNX,KAAK2E,SAAWC,YAAY5E,KAAKuE,KAAM,QAGjCM,gCACNC,cAAc9E,KAAK2E,aAGb7E,kBAAS,IACPI,EAAUF,KAAKC,MAAfC,MACAwE,EAAa1E,KAAKqD,MAAlBqB,SAER,OACCrE,EAAA,qBAAKC,MAAOb,GACXY,EAAA,cAACmB,EAAD,CAAKtB,MAAOA,EAAOE,OAAQsE,QAKtBH,gBACPvE,KAAKgE,SAAS,CACbU,UAAW1E,KAAKqD,MAAMqB,eAnCmBjE,iBCXtCsE,EAAmC,CACxC3D,SAAU,QACV4D,cAAe,OACfC,OAAQ,IACRlE,KAAM,EACNC,IAAK,EACLuB,MAAO,OACPhB,OAAQ,QAqCT,IAsBe2D,sBAAgC,SAAArD,GAAO,MAAK,CAC1DgB,KAAMhB,EAAQiB,UACdqC,SAAUtD,EAAQuD,cAClBC,cAAexD,EAAQyD,+BACvBC,cAAe1D,EAAQ2D,wBACvBvE,WAAYY,EAAQZ,eALNiE,CAtB0C,SAAAjF,GAAS,IACzD4C,EAA+B5C,EAA/B4C,KAAMsC,EAAyBlF,EAAzBkF,SAWd,OAXuClF,EAAfgB,WAevBZ,EAAA,qBAAKC,MAAOyE,GACX1E,EAAA,qBAAKC,MAnDR,SAAuBL,GAA6B,IAC3CoF,EAAiCpF,EAAjCoF,cAAeE,EAAkBtF,EAAlBsF,cACvB,IAAKF,IAAkBE,EACtB,MAAO,CACNlB,QAAS,QAJwC,IAQ7CpC,EAASsD,EAATtD,EAAGC,EAAMqD,EAANrD,EAET,GAAIjC,EAAM+B,WAAY,KAAAe,EAGXf,EAFVC,GAAKoD,EAAcpD,EACnBC,GAAKmD,EAAcnD,GACjBD,EAHmBc,EAAA,GAGhBb,EAHgBa,EAAA,GAIrBd,GAAKoD,EAAcpD,EACnBC,GAAKmD,EAAcnD,EAGpB,IAAMhB,EAAS,aAAgBe,EAAhB,OAAwBC,EAAxB,MACf,MAAO,CACNhB,YACAG,gBAAiBH,GA8BJuE,CAAcxF,IAd5B,WACC,OAAQkF,GACP,KAAK5F,EAAUC,IACd,OAAOa,EAAA,cAACqF,EAAD,CAAgBxF,MAAO2C,EAAK3C,QACpC,QACC,OAAO,MAS2ByF,KAJ7B,OCvDYC,cAIpB,SAAAA,EAAY3F,GAAW,IAAAiD,EAAA,OACtBA,EAAA2C,EAAAzC,KAAApD,KAAMC,IAAND,MAEK8F,gCAAkC5C,EAAK4C,gCAAgCtB,KAArCC,QAAAvB,KAGvCA,EAAK6C,oCAAsC7C,EAAK6C,oCAAoCvB,KAAzCC,QAAAvB,KAI3CA,EAAKG,MAAQ,CACZ2C,qBAAqB,EACrBC,yBAAyB,GAZJ/C,sCAgBhBpD,kBAAS,IAAAoG,EAC0ClG,KAAKqD,MAAtD2C,EADOE,EACPF,oBAAqBC,EADdC,EACcD,wBAE7B,OACC5F,EAAA,yBACCA,EAAA,uBACCA,EAAA,uBACCA,EAAA,mBAAG8F,KAAK,mIAAR,uBAKF9F,EAAA,iUAOAA,EAAA,yJAEiE,IAChEA,EAAA,uCAHD,qHAMAA,EAAA,8IAIAA,EAAA,8MAKAA,EAAA,cAAC+F,EAAD,CAAWpE,WAAYgE,IACvB3F,EAAA,cAACgG,EAAD,CAAiBrE,WAAYiE,IAC7B5F,EAAA,uBACCA,EAAA,uBAAOiG,QAAQ,2BACdjG,EAAA,uBACCsB,GAAG,0BACH4E,KAAK,WACLC,QAASP,EACTQ,SAAUzG,KAAK+F,sCAEhB1F,EAAA,2DAEDA,EAAA,yBACAA,EAAA,uBAAOiG,QAAQ,uBACdjG,EAAA,uBACCsB,GAAG,sBACH4E,KAAK,WACLC,QAASR,EACTS,SAAUzG,KAAK8F,kCAEhBzF,EAAA,4DAOGyF,2CACP9F,KAAKgE,SAAS,CACbgC,qBAAsBhG,KAAKqD,MAAM2C,yBAI3BD,+CACP/F,KAAKgE,SAAS,CACbiC,yBAA0BjG,KAAKqD,MAAM4C,8BAzFexF,sBCJxCiG,EAAA,iBAACzG,GAAD,OACdI,EAAA,cAACsG,EAAA,EAAW1G,EACXI,EAAA,cAACuG,EAAD,6BCNF,IAAAC,EAAgBC,EAAQ,IAExBC,EAAAxG,OAAAyG,UAAAD,eACAE,EAAAC,MAAAF,UAAAC,OAEAE,EAAA5G,OAAAyG,UAAAG,SACAZ,EAAA,SAAAa,GACA,OAAAD,EAAA/D,KAAAgE,GAAAC,MAAA,OAGA7G,EAAAD,OAAAC,QAAA,SAAA8G,EAAAC,GAMA,OALAC,EAAAD,GAAAE,QAAA,SAAA5D,GACAkD,EAAA3D,KAAAmE,EAAA1D,KACAyD,EAAAzD,GAAA0D,EAAA1D,MAGAyD,GAGAE,EAAA,mBAAAjH,OAAAmH,sBACA,SAAAN,GAAiB,OAAA7G,OAAAoD,KAAAyD,GAAAO,OAAApH,OAAAmH,sBAAAN,KACjB,SAAAA,GAA4C,OAAA7G,OAAAoD,KAAAyD,IAG5C,SAAAQ,EAAAC,GACA,GAAAX,MAAAY,QAAAD,GACA,OAAArH,EAAAqH,EAAAE,YAAAF,EAAAG,QAAAH,GACG,WAAAtB,EAAAsB,GACH,WAAAI,IAAAJ,GACG,WAAAtB,EAAAsB,GACH,WAAAK,IAAAL,GACG,GAAAA,GAAA,iBAAAA,EAAA,CACH,IAAAb,EAAAzG,OAAA4H,eAAAN,GACA,OAAArH,EAAAD,OAAA6H,OAAApB,GAAAa,GAEA,OAAAA,EAIA,SAAAQ,IACA,IAAAC,EAAA9H,EAAA,GAA0B+H,GAM1B,OALAlG,EAAAmG,OAAA,SAAAC,EAAAC,GACAJ,EAAAG,GAAAC,GAEArG,EAAAsG,SAAA,SAAApF,EAAAC,GAAoC,OAAAD,IAAAC,GAEpCnB,EAEA,SAAAA,EAAAwF,EAAAe,GACA,mBAAAA,IACAA,EAAA,CAAcC,OAAAD,IAGd1B,MAAAY,QAAAD,IAAAX,MAAAY,QAAAc,IACA/B,GACAK,MAAAY,QAAAc,GACA,8LAMA/B,EACA,iBAAA+B,GAAA,OAAAA,EACA,+JAGArI,OAAAoD,KAAA2E,GAAAQ,KAAA,OAGA,IAAAC,EAAAlB,EA8BA,OA5BAL,EAAAoB,GAAAnB,QAAA,SAAA5D,GACA,GAAAkD,EAAA3D,KAAAkF,EAAAzE,GAAA,CACA,IAAAmF,EAAAnB,IAAAkB,EACAA,EAAAT,EAAAzE,GAAA+E,EAAA/E,GAAAkF,EAAAH,EAAAf,GACAmB,GAAA3G,EAAAsG,SAAAI,EAAAlB,KACAkB,EAAAlB,OAEO,CACP,IAAAoB,EACA,QAAA1C,EAAAsB,GACAxF,EAAAwF,EAAAqB,IAAArF,GAAA+E,EAAA/E,IACAxB,EAAAwF,EAAAhE,GAAA+E,EAAA/E,IACAsF,EACA,QAAA5C,EAAAwC,GACAA,EAAAG,IAAArF,GACAkF,EAAAlF,GACAxB,EAAAsG,SAAAM,EAAAE,UAAA,IAAAF,GAAAlC,EAAA3D,KAAAyE,EAAAhE,MACAkF,IAAAlB,IACAkB,EAAAnB,EAAAC,IAEA,QAAAtB,EAAAwC,GACAA,EAAAK,IAAAvF,EAAAoF,GAEAF,EAAAlF,GAAAoF,MAKAF,GAKA,IAAAR,EAAA,CACAc,MAAA,SAAAC,EAAAP,EAAAH,GAEA,OADAW,EAAAR,EAAAH,EAAA,SACAU,EAAAtB,OAAAe,EAAApB,OAAA2B,GAAAP,GAEAS,SAAA,SAAAF,EAAAP,EAAAH,GAEA,OADAW,EAAAR,EAAAH,EAAA,YACAU,EAAAtB,OAAAsB,EAAA3B,OAAAoB,MAEAU,QAAA,SAAAH,EAAAP,EAAAH,EAAAc,GAOA,OAiGA,SAAAJ,EAAAV,GACA/B,EACAK,MAAAY,QAAAwB,GACA,iDACAA,GAEAK,EAAAf,EAAA,SA7GAgB,CAAAb,EAAAH,GACAU,EAAA7B,QAAA,SAAAoC,GACAF,EAAAE,GACAd,IAAAW,GAAAG,EAAA7B,SAAAe,EAAAnB,EAAA8B,IACAzC,EAAA6C,MAAAf,EAAAc,KAEAd,GAEAgB,KAAA,SAAAT,EAAAP,EAAAH,GAEA,OAuHA,SAAAA,GACA/B,EACA,IAAAtG,OAAAoD,KAAAiF,GAAAZ,OACA,wDA3HAgC,CAAApB,GACAU,GAEAW,QAAA,SAAAC,EAAAnB,GACAoB,EAAAD,EAAA,WACA,IAAAE,EAAAF,EAAAlC,OAAAJ,EAAAmB,KAMA,OAJAmB,EAAAzC,QAAA,SAAAH,GACA8C,EAAA9C,IAAAyB,EAAAzB,KAGA8C,GAEAC,OAAA,SAAAf,EAAAP,EAAAH,EAAAc,GAQA,OAPAS,EAAAb,EAAA,UACAA,EAAA7B,QAAA,SAAA5D,GACAtD,OAAAwG,eAAA3D,KAAA2F,EAAAlF,KACAkF,IAAAW,IAAAX,EAAAnB,EAAA8B,WACAX,EAAAlF,MAGAkF,GAEAuB,KAAA,SAAAhB,EAAAP,EAAAH,EAAAc,GAgBA,OAfAa,EAAAxB,EAAA,QACAoB,EAAAb,EAAA,QACA,QAAA/C,EAAAwC,GACAO,EAAA7B,QAAA,SAAA+C,GACA,IAAA3G,EAAA2G,EAAA,GACAlB,EAAAkB,EAAA,GACAzB,IAAAW,GAAAX,EAAAG,IAAArF,KAAAyF,IAAAP,EAAAnB,EAAA8B,IACAX,EAAAK,IAAAvF,EAAAyF,KAGAA,EAAA7B,QAAA,SAAA6B,GACAP,IAAAW,GAAAX,EAAA0B,IAAAnB,KAAAP,EAAAnB,EAAA8B,IACAX,EAAA2B,IAAApB,KAGAP,GAEA4B,QAAA,SAAArB,EAAAP,EAAAH,EAAAc,GAOA,OANAa,EAAAxB,EAAA,WACAoB,EAAAb,EAAA,WACAA,EAAA7B,QAAA,SAAA5D,GACAkF,IAAAW,GAAAX,EAAA0B,IAAA5G,KAAAkF,EAAAnB,EAAA8B,IACAX,EAAA6B,OAAA/G,KAEAkF,GAEA9E,OAAA,SAAAqF,EAAAP,EAAAH,EAAAc,GA6EA,IAAApC,EAAAuD,EArEA,OAqEAvD,EA5EAyB,EA6EAlC,GADAgE,EA5EAvB,IA8EA,iBAAAuB,EACA,2DACAA,GAEAhE,EACAS,GAAA,iBAAAA,EACA,6DACAA,GApFAE,EAAA8B,GAAA7B,QAAA,SAAA5D,GACAyF,EAAAzF,KAAAkF,EAAAlF,KACAkF,IAAAW,IAAAX,EAAAnB,EAAA8B,IACAX,EAAAlF,GAAAyF,EAAAzF,MAGAkF,GAEAF,OAAA,SAAAS,EAAAwB,GAoDA,IAAApC,EAlDA,OAmDA7B,EACA,mBAFA6B,EAnDAY,GAsDA,8DACAZ,GAtDAY,EAAAwB,KAIAC,EAAA1C,IAQA,SAAAkB,EAAAD,EAAAV,EAAAoC,GACAnE,EACAK,MAAAY,QAAAwB,GACA,0DACA0B,EACA1B,GAEAa,EAAAvB,EAAAoC,MAGA,SAAAb,EAAAvB,EAAAoC,GACAnE,EACAK,MAAAY,QAAAc,GACA,2GAEAoC,EACApC,GAaA,SAAAe,EAAAL,GACAzC,EACAK,MAAAY,QAAAwB,GACA,2HAEAA,GAgCA,SAAAiB,EAAAjD,EAAA0D,GACA,IAAAC,EAAA1E,EAAAe,GACAT,EACA,QAAAoE,GAAA,QAAAA,EACA,2DACAD,EACAC,GA9EAC,EAAAC,QAAAJ,EACAG,EAAAC,QAAAC,QAAAL,EACAG,EAAAC,QAAA9C","file":"component---src-pages-examples-drag-around-custom-drag-layer-tsx-de38be245564ce6fa308.js","sourcesContent":["export default {\n\tBOX: 'box',\n}\n","import * as React from 'react'\n\nconst styles: React.CSSProperties = {\n\tborder: '1px dashed gray',\n\tpadding: '0.5rem 1rem',\n\tcursor: 'move',\n}\n\nexport interface BoxProps {\n\ttitle: string\n\tyellow?: boolean\n}\n\nexport default class Box extends React.PureComponent<BoxProps> {\n\tpublic render() {\n\t\tconst { title, yellow } = this.props\n\t\tconst backgroundColor = yellow ? 'yellow' : 'white'\n\n\t\treturn <div style={{ ...styles, backgroundColor }}>{title}</div>\n\t}\n}\n","import * as React from 'react'\nimport { DragSource, ConnectDragSource, ConnectDragPreview } from 'react-dnd'\nimport { getEmptyImage } from 'react-dnd-html5-backend'\nimport ItemTypes from './ItemTypes'\nimport Box from './Box'\n\nconst boxSource = {\n\tbeginDrag(props: DraggableBoxProps) {\n\t\tconst { id, title, left, top } = props\n\t\treturn { id, title, left, top }\n\t},\n}\n\nfunction getStyles(props: DraggableBoxProps): React.CSSProperties {\n\tconst { left, top, isDragging } = props\n\tconst transform = `translate3d(${left}px, ${top}px, 0)`\n\n\treturn {\n\t\tposition: 'absolute',\n\t\ttransform,\n\t\tWebkitTransform: transform,\n\t\t// IE fallback: hide the real node using CSS when dragging\n\t\t// because IE will ignore our custom \"empty image\" drag preview.\n\t\topacity: isDragging ? 0 : 1,\n\t\theight: isDragging ? 0 : '',\n\t}\n}\n\nexport interface DraggableBoxProps {\n\tconnectDragSource?: ConnectDragSource\n\tconnectDragPreview?: ConnectDragPreview\n\tisDragging?: boolean\n\tid: string\n\ttitle: string\n\tleft: number\n\ttop: number\n}\n\nclass DraggableBox extends React.PureComponent<DraggableBoxProps> {\n\tpublic componentDidMount() {\n\t\tconst { connectDragPreview } = this.props\n\t\tif (connectDragPreview) {\n\t\t\t// Use empty image as a drag preview so browsers don't draw it\n\t\t\t// and we can draw whatever we want on the custom drag layer instead.\n\t\t\tconnectDragPreview(getEmptyImage(), {\n\t\t\t\t// IE fallback: specify that we'd rather screenshot the node\n\t\t\t\t// when it already knows it's being dragged so we can hide it with CSS.\n\t\t\t\tcaptureDraggingState: true,\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst { title, connectDragSource } = this.props\n\n\t\treturn (\n\t\t\tconnectDragSource &&\n\t\t\tconnectDragSource(\n\t\t\t\t<div style={getStyles(this.props)}>\n\t\t\t\t\t<Box title={title} />\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport default DragSource(ItemTypes.BOX, boxSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n\tconnectDragPreview: connect.dragPreview(),\n\tisDragging: monitor.isDragging(),\n}))(DraggableBox)\n","export default function snapToGrid(x: number, y: number) {\n\tconst snappedX = Math.round(x / 32) * 32\n\tconst snappedY = Math.round(y / 32) * 32\n\treturn [snappedX, snappedY]\n}\n","import * as React from 'react'\nimport {\n\tDropTarget,\n\tConnectDropTarget,\n\tDropTargetMonitor,\n\tDropTargetConnector,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport DraggableBox from './DraggableBox'\nimport snapToGrid from './snapToGrid'\nconst update = require('immutability-helper')\n\nconst styles: React.CSSProperties = {\n\twidth: 300,\n\theight: 300,\n\tborder: '1px solid black',\n\tposition: 'relative',\n}\n\nconst boxTarget = {\n\tdrop(\n\t\tprops: ContainerProps,\n\t\tmonitor: DropTargetMonitor,\n\t\tcomponent: Container | null,\n\t) {\n\t\tif (!component) {\n\t\t\treturn\n\t\t}\n\t\tconst delta = monitor.getDifferenceFromInitialOffset() as {\n\t\t\tx: number\n\t\t\ty: number\n\t\t}\n\t\tconst item = monitor.getItem()\n\n\t\tlet left = Math.round(item.left + delta.x)\n\t\tlet top = Math.round(item.top + delta.y)\n\t\tif (props.snapToGrid) {\n\t\t\t;[left, top] = snapToGrid(left, top)\n\t\t}\n\n\t\tcomponent.moveBox(item.id, left, top)\n\t},\n}\n\nexport interface ContainerProps {\n\tsnapToGrid: boolean\n\tconnectDropTarget?: ConnectDropTarget\n}\n\nexport interface ContainerState {\n\tboxes: { [key: string]: { top: number; left: number; title: string } }\n}\n\nclass Container extends React.PureComponent<ContainerProps, ContainerState> {\n\tconstructor(props: ContainerProps) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tboxes: {\n\t\t\t\ta: { top: 20, left: 80, title: 'Drag me around' },\n\t\t\t\tb: { top: 180, left: 20, title: 'Drag me too' },\n\t\t\t},\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst { connectDropTarget } = this.props\n\t\tconst { boxes } = this.state\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={styles}>\n\t\t\t\t\t{Object.keys(boxes).map(key => this.renderBox(boxes[key], key))}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n\n\tpublic moveBox(id: string, left: number, top: number) {\n\t\tthis.setState(\n\t\t\tupdate(this.state, {\n\t\t\t\tboxes: {\n\t\t\t\t\t[id]: {\n\t\t\t\t\t\t$merge: { left, top },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t)\n\t}\n\n\tprivate renderBox(item: any, key: any) {\n\t\treturn <DraggableBox key={key} id={key} {...item} />\n\t}\n}\n\nexport default DropTarget(\n\tItemTypes.BOX,\n\tboxTarget,\n\t(connect: DropTargetConnector) => ({\n\t\tconnectDropTarget: connect.dropTarget(),\n\t}),\n)(Container)\n","import * as React from 'react'\nimport Box from './Box'\n\nconst styles = {\n\tdisplay: 'inline-block',\n\ttransform: 'rotate(-7deg)',\n\tWebkitTransform: 'rotate(-7deg)',\n}\n\nexport interface BoxDragPreviewProps {\n\ttitle: string\n}\n\nexport interface BoxDragPreviewState {\n\ttickTock: any\n}\n\nexport default class BoxDragPreview extends React.PureComponent<\n\tBoxDragPreviewProps,\n\tBoxDragPreviewState\n> {\n\tprivate interval: any\n\n\tconstructor(props: BoxDragPreviewProps) {\n\t\tsuper(props)\n\t\tthis.tick = this.tick.bind(this)\n\t\tthis.state = {\n\t\t\ttickTock: false,\n\t\t}\n\t}\n\n\tpublic componentDidMount() {\n\t\tthis.interval = setInterval(this.tick, 500)\n\t}\n\n\tpublic componentWillUnmount() {\n\t\tclearInterval(this.interval)\n\t}\n\n\tpublic render() {\n\t\tconst { title } = this.props\n\t\tconst { tickTock } = this.state\n\n\t\treturn (\n\t\t\t<div style={styles}>\n\t\t\t\t<Box title={title} yellow={tickTock} />\n\t\t\t</div>\n\t\t)\n\t}\n\n\tprivate tick() {\n\t\tthis.setState({\n\t\t\ttickTock: !this.state.tickTock,\n\t\t})\n\t}\n}\n","import * as React from 'react'\nimport { DragLayer, XYCoord } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport BoxDragPreview from './BoxDragPreview'\nimport snapToGrid from './snapToGrid'\n\nconst layerStyles: React.CSSProperties = {\n\tposition: 'fixed',\n\tpointerEvents: 'none',\n\tzIndex: 100,\n\tleft: 0,\n\ttop: 0,\n\twidth: '100%',\n\theight: '100%',\n}\n\nfunction getItemStyles(props: CustomDragLayerProps) {\n\tconst { initialOffset, currentOffset } = props\n\tif (!initialOffset || !currentOffset) {\n\t\treturn {\n\t\t\tdisplay: 'none',\n\t\t}\n\t}\n\n\tlet { x, y } = currentOffset\n\n\tif (props.snapToGrid) {\n\t\tx -= initialOffset.x\n\t\ty -= initialOffset.y\n\t\t;[x, y] = snapToGrid(x, y)\n\t\tx += initialOffset.x\n\t\ty += initialOffset.y\n\t}\n\n\tconst transform = `translate(${x}px, ${y}px)`\n\treturn {\n\t\ttransform,\n\t\tWebkitTransform: transform,\n\t}\n}\n\nexport interface CustomDragLayerProps {\n\titem?: any\n\titemType?: string\n\tinitialOffset?: XYCoord\n\tcurrentOffset?: XYCoord\n\tisDragging?: boolean\n\tsnapToGrid: boolean\n}\n\nconst CustomDragLayer: React.SFC<CustomDragLayerProps> = props => {\n\tconst { item, itemType, isDragging } = props\n\n\tfunction renderItem() {\n\t\tswitch (itemType) {\n\t\t\tcase ItemTypes.BOX:\n\t\t\t\treturn <BoxDragPreview title={item.title} />\n\t\t\tdefault:\n\t\t\t\treturn null\n\t\t}\n\t}\n\n\tif (!isDragging) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div style={layerStyles}>\n\t\t\t<div style={getItemStyles(props)}>{renderItem()}</div>\n\t\t</div>\n\t)\n}\n\nexport default DragLayer<CustomDragLayerProps>(monitor => ({\n\titem: monitor.getItem(),\n\titemType: monitor.getItemType(),\n\tinitialOffset: monitor.getInitialSourceClientOffset(),\n\tcurrentOffset: monitor.getSourceClientOffset(),\n\tisDragging: monitor.isDragging(),\n}))(CustomDragLayer)\n","import * as React from 'react'\nimport Container from './Container'\nimport CustomDragLayer from './CustomDragLayer'\n\nexport interface DragAroundCustomDragLayerState {\n\tsnapToGridAfterDrop: boolean\n\tsnapToGridWhileDragging: boolean\n}\nexport default class DragAroundCustomDragLayer extends React.Component<\n\t{},\n\tDragAroundCustomDragLayerState\n> {\n\tconstructor(props: {}) {\n\t\tsuper(props)\n\n\t\tthis.handleSnapToGridAfterDropChange = this.handleSnapToGridAfterDropChange.bind(\n\t\t\tthis,\n\t\t)\n\t\tthis.handleSnapToGridWhileDraggingChange = this.handleSnapToGridWhileDraggingChange.bind(\n\t\t\tthis,\n\t\t)\n\n\t\tthis.state = {\n\t\t\tsnapToGridAfterDrop: false,\n\t\t\tsnapToGridWhileDragging: false,\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst { snapToGridAfterDrop, snapToGridWhileDragging } = this.state\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/02%20Drag%20Around/Custom%20Drag%20Layer\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tThe browser APIs provide no way to change the drag preview or its\n\t\t\t\t\tbehavior once drag has started. Libraries such as jQuery UI implement\n\t\t\t\t\tthe drag and drop from scratch to work around this, but react-dnd only\n\t\t\t\t\tsupports browser drag and drop “backend” for now, so we have to accept\n\t\t\t\t\tits limitations.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tWe can, however, customize behavior a great deal if we feed the\n\t\t\t\t\tbrowser an empty image as drag preview. This library provides a{' '}\n\t\t\t\t\t<code>DragLayer</code> that you can use to implement a fixed layer on\n\t\t\t\t\ttop of your app where you&apos;d draw a custom drag preview component.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tNote that we can draw a completely different component on our drag\n\t\t\t\t\tlayer if we wish so. It&apos;s not just a screenshot.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tWith this approach, we miss out on default “return” animation when\n\t\t\t\t\tdropping outside the container. However, we get great flexibility in\n\t\t\t\t\tcustomizing drag feedback and zero flicker.\n\t\t\t\t</p>\n\t\t\t\t<Container snapToGrid={snapToGridAfterDrop} />\n\t\t\t\t<CustomDragLayer snapToGrid={snapToGridWhileDragging} />\n\t\t\t\t<p>\n\t\t\t\t\t<label htmlFor=\"snapToGridWhileDragging\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"snapToGridWhileDragging\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={snapToGridWhileDragging}\n\t\t\t\t\t\t\tonChange={this.handleSnapToGridWhileDraggingChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>Snap to grid while dragging</small>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br />\n\t\t\t\t\t<label htmlFor=\"snapToGridAfterDrop\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"snapToGridAfterDrop\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={snapToGridAfterDrop}\n\t\t\t\t\t\t\tonChange={this.handleSnapToGridAfterDropChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>Snap to grid after drop</small>\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tprivate handleSnapToGridAfterDropChange() {\n\t\tthis.setState({\n\t\t\tsnapToGridAfterDrop: !this.state.snapToGridAfterDrop,\n\t\t})\n\t}\n\n\tprivate handleSnapToGridWhileDraggingChange() {\n\t\tthis.setState({\n\t\t\tsnapToGridWhileDragging: !this.state.snapToGridWhileDragging,\n\t\t})\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/02 Drag Around/Custom Drag Layer'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n","var invariant = require('invariant');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\n\nvar toString = Object.prototype.toString\nvar type = function(obj) {\n  return toString.call(obj).slice(8, -1);\n}\n\nvar assign = Object.assign || /* istanbul ignore next */ function assign(target, source) {\n  getAllKeys(source).forEach(function(key) {\n    if (hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n};\n\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function' ?\n  function(obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)) } :\n  /* istanbul ignore next */ function(obj) { return Object.keys(obj) };\n\n/* istanbul ignore next */\nfunction copy(object) {\n  if (Array.isArray(object)) {\n    return assign(object.constructor(object.length), object)\n  } else if (type(object) === 'Map') {\n    return new Map(object)\n  } else if (type(object) === 'Set') {\n    return new Set(object)\n  } else if (object && typeof object === 'object') {\n    var prototype = Object.getPrototypeOf(object);\n    return assign(Object.create(prototype), object);\n  } else {\n    return object;\n  }\n}\n\nfunction newContext() {\n  var commands = assign({}, defaultCommands);\n  update.extend = function(directive, fn) {\n    commands[directive] = fn;\n  };\n  update.isEquals = function(a, b) { return a === b; };\n\n  return update;\n\n  function update(object, spec) {\n    if (typeof spec === 'function') {\n      spec = { $apply: spec };\n    }\n\n    if (!(Array.isArray(object) && Array.isArray(spec))) {\n      invariant(\n        !Array.isArray(spec),\n        'update(): You provided an invalid spec to update(). The spec may ' +\n        'not contain an array except as the value of $set, $push, $unshift, ' +\n        '$splice or any custom command allowing an array value.'\n      );\n    }\n\n    invariant(\n      typeof spec === 'object' && spec !== null,\n      'update(): You provided an invalid spec to update(). The spec and ' +\n      'every included key path must be plain objects containing one of the ' +\n      'following commands: %s.',\n      Object.keys(commands).join(', ')\n    );\n\n    var nextObject = object;\n    var index, key;\n    getAllKeys(spec).forEach(function(key) {\n      if (hasOwnProperty.call(commands, key)) {\n        var objectWasNextObject = object === nextObject;\n        nextObject = commands[key](spec[key], nextObject, spec, object);\n        if (objectWasNextObject && update.isEquals(nextObject, object)) {\n          nextObject = object;\n        }\n      } else {\n        var nextValueForKey =\n          type(object) === 'Map'\n            ? update(object.get(key), spec[key])\n            : update(object[key], spec[key]);\n        var nextObjectValue =\n          type(nextObject) === 'Map'\n              ? nextObject.get(key)\n              : nextObject[key];\n        if (!update.isEquals(nextValueForKey, nextObjectValue) || typeof nextValueForKey === 'undefined' && !hasOwnProperty.call(object, key)) {\n          if (nextObject === object) {\n            nextObject = copy(object);\n          }\n          if (type(nextObject) === 'Map') {\n            nextObject.set(key, nextValueForKey);\n          } else {\n            nextObject[key] = nextValueForKey;\n          }\n        }\n      }\n    })\n    return nextObject;\n  }\n\n}\n\nvar defaultCommands = {\n  $push: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$push');\n    return value.length ? nextObject.concat(value) : nextObject;\n  },\n  $unshift: function(value, nextObject, spec) {\n    invariantPushAndUnshift(nextObject, spec, '$unshift');\n    return value.length ? value.concat(nextObject) : nextObject;\n  },\n  $splice: function(value, nextObject, spec, originalObject) {\n    invariantSplices(nextObject, spec);\n    value.forEach(function(args) {\n      invariantSplice(args);\n      if (nextObject === originalObject && args.length) nextObject = copy(originalObject);\n      splice.apply(nextObject, args);\n    });\n    return nextObject;\n  },\n  $set: function(value, nextObject, spec) {\n    invariantSet(spec);\n    return value;\n  },\n  $toggle: function(targets, nextObject) {\n    invariantSpecArray(targets, '$toggle');\n    var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n\n    targets.forEach(function(target) {\n      nextObjectCopy[target] = !nextObject[target];\n    });\n\n    return nextObjectCopy;\n  },\n  $unset: function(value, nextObject, spec, originalObject) {\n    invariantSpecArray(value, '$unset');\n    value.forEach(function(key) {\n      if (Object.hasOwnProperty.call(nextObject, key)) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        delete nextObject[key];\n      }\n    });\n    return nextObject;\n  },\n  $add: function(value, nextObject, spec, originalObject) {\n    invariantMapOrSet(nextObject, '$add');\n    invariantSpecArray(value, '$add');\n    if (type(nextObject) === 'Map') {\n      value.forEach(function(pair) {\n        var key = pair[0];\n        var value = pair[1];\n        if (nextObject === originalObject && nextObject.get(key) !== value) nextObject = copy(originalObject);\n        nextObject.set(key, value);\n      });\n    } else {\n      value.forEach(function(value) {\n        if (nextObject === originalObject && !nextObject.has(value)) nextObject = copy(originalObject);\n        nextObject.add(value);\n      });\n    }\n    return nextObject;\n  },\n  $remove: function(value, nextObject, spec, originalObject) {\n    invariantMapOrSet(nextObject, '$remove');\n    invariantSpecArray(value, '$remove');\n    value.forEach(function(key) {\n      if (nextObject === originalObject && nextObject.has(key)) nextObject = copy(originalObject);\n      nextObject.delete(key);\n    });\n    return nextObject;\n  },\n  $merge: function(value, nextObject, spec, originalObject) {\n    invariantMerge(nextObject, value);\n    getAllKeys(value).forEach(function(key) {\n      if (value[key] !== nextObject[key]) {\n        if (nextObject === originalObject) nextObject = copy(originalObject);\n        nextObject[key] = value[key];\n      }\n    });\n    return nextObject;\n  },\n  $apply: function(value, original) {\n    invariantApply(value);\n    return value(original);\n  }\n};\n\nvar contextForExport = newContext();\n\nmodule.exports = contextForExport;\nmodule.exports.default = contextForExport;\nmodule.exports.newContext = newContext;\n\n// invariants\n\nfunction invariantPushAndUnshift(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  invariantSpecArray(spec[command], command)\n}\n\nfunction invariantSpecArray(spec, command) {\n  invariant(\n    Array.isArray(spec),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    spec\n  );\n}\n\nfunction invariantSplices(value, spec) {\n  invariant(\n    Array.isArray(value),\n    'Expected $splice target to be an array; got %s',\n    value\n  );\n  invariantSplice(spec['$splice']);\n}\n\nfunction invariantSplice(value) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected spec of $splice to be an array of arrays; got %s. ' +\n    'Did you forget to wrap your parameters in an array?',\n    value\n  );\n}\n\nfunction invariantApply(fn) {\n  invariant(\n    typeof fn === 'function',\n    'update(): expected spec of $apply to be a function; got %s.',\n    fn\n  );\n}\n\nfunction invariantSet(spec) {\n  invariant(\n    Object.keys(spec).length === 1,\n    'Cannot have more than one key in an object with $set'\n  );\n}\n\nfunction invariantMerge(target, specValue) {\n  invariant(\n    specValue && typeof specValue === 'object',\n    'update(): $merge expects a spec of type \\'object\\'; got %s',\n    specValue\n  );\n  invariant(\n    target && typeof target === 'object',\n    'update(): $merge expects a target of type \\'object\\'; got %s',\n    target\n  );\n}\n\nfunction invariantMapOrSet(target, command) {\n  var typeOfTarget = type(target);\n  invariant(\n    typeOfTarget === 'Map' || typeOfTarget === 'Set',\n    'update(): %s expects a target of type Set or Map; got %s',\n    command,\n    typeOfTarget\n  );\n}\n"],"sourceRoot":""}