{"version":3,"sources":["webpack:///./src/examples/05 Customize/Drop Effects/ItemTypes.ts","webpack:///./src/examples/05 Customize/Drop Effects/SourceBox.tsx","webpack:///./src/examples/05 Customize/Drop Effects/TargetBox.tsx","webpack:///./src/examples/05 Customize/Drop Effects/Container.tsx","webpack:///./src/examples/05 Customize/Drop Effects/index.tsx","webpack:///./src/pages/examples/customize/drop-effects.tsx"],"names":["ItemTypes","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","SourceBox","render","_this$props","this","props","isDragging","connectDragSource","showCopyIcon","opacity","dropEffect","react","Object","assign","React","DragSource","beginDrag","connect","monitor","dragSource","height","width","textAlign","TargetBox","canDrop","isOver","connectDropTarget","isActive","DropTarget","drop","dropTarget","Container","overflow","clear","marginTop","float","Drop_Effects_SourceBox","Drop_Effects_TargetBox","CustomizeDropEffects","href","Container_Container","__webpack_exports__","layout","Drop_Effects_CustomizeDropEffects"],"mappings":"6IAAeA,EACT,MCGAC,EAA6B,CAClCC,OAAQ,kBACRC,gBAAiB,QACjBC,QAAS,cACTC,YAAa,OACbC,aAAc,OACdC,OAAQ,QAeHC,4FACEC,kBAAS,IAAAC,EACyCC,KAAKC,MAArDC,EADOH,EACPG,WAAYC,EADLJ,EACKI,kBAAmBC,EADxBL,EACwBK,aACjCC,EAAUH,EAAa,GAAM,EAC7BI,EAAaF,EAAe,OAAS,OAE3C,OACCD,GACAA,EACCI,EAAA,qBAAKjB,MAAKkB,OAAAC,OAAA,GAAOnB,EAAP,CAAce,aAAxB,sCACqCD,EAAe,OAAS,KAAM,IADnE,SAIA,CAAEE,mBAbkBI,aAmBTC,uBAAWtB,EA/BR,CACjBuB,UADiB,WAEhB,MAAO,KA6B2C,SAACC,EAASC,GAAV,MAAuB,CAC1EX,kBAAmBU,EAAQE,aAC3Bb,WAAYY,EAAQZ,eAFNS,CAGXd,GC3CEP,EAA6B,CAClCC,OAAQ,iBACRyB,OAAQ,QACRC,MAAO,QACPxB,QAAS,OACTyB,UAAW,UAeNC,4FACErB,kBAAS,IAAAC,EACgCC,KAAKC,MAA5CmB,EADOrB,EACPqB,QAASC,EADFtB,EACEsB,OAAQC,EADVvB,EACUuB,kBACnBC,EAAWH,GAAWC,EAE5B,OACCC,GACAA,EACCf,EAAA,qBAAKjB,MAAOA,GACViC,EAAW,kBAAoB,uBATbb,aAgBTc,uBAAWnC,EA5BR,CACjBoC,KADiB,cA4BkC,SAACZ,EAASC,GAAV,MAAuB,CAC1EQ,kBAAmBT,EAAQa,aAC3BL,OAAQP,EAAQO,SAChBD,QAASN,EAAQM,YAHHI,CAIXL,GCxCiBQ,4FACb7B,kBACN,OACCS,EAAA,qBAAKjB,MAAO,CAAEsC,SAAU,SAAUC,MAAO,OAAQC,UAAW,WAC3DvB,EAAA,qBAAKjB,MAAO,CAAEyC,MAAO,SACpBxB,EAAA,cAACyB,EAAD,CAAW5B,cAAc,IACzBG,EAAA,cAACyB,EAAD,OAEDzB,EAAA,qBAAKjB,MAAO,CAAEyC,MAAO,SACpBxB,EAAA,cAAC0B,EAAD,YATkCvB,aCDlBwB,4FACbpC,kBACN,OACCS,EAAA,yBACCA,EAAA,uBACCA,EAAA,uBACCA,EAAA,mBAAG4B,KAAK,wHAAR,uBAKF5B,EAAA,2MAKAA,EAAA,cAAC6B,EAAD,WAhB8C1B,sBCCnC2B,EAAA,iBAACpC,GAAD,OACdM,EAAA,cAAC+B,EAAA,EAAWrC,EACXM,EAAA,cAACgC,EAAD","file":"component---src-pages-examples-customize-drop-effects-tsx-e76cfa5fa6af9ef96b1a.js","sourcesContent":["export default {\n\tBOX: 'box',\n}\n","import * as React from 'react'\nimport { DragSource, ConnectDragSource } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style: React.CSSProperties = {\n\tborder: '1px dashed gray',\n\tbackgroundColor: 'white',\n\tpadding: '0.5rem 1rem',\n\tmarginRight: '1rem',\n\tmarginBottom: '1rem',\n\tcursor: 'move',\n}\n\nconst boxSource = {\n\tbeginDrag() {\n\t\treturn {}\n\t},\n}\n\nexport interface SourceBoxProps {\n\tisDragging?: boolean\n\tconnectDragSource?: ConnectDragSource\n\tshowCopyIcon?: boolean\n}\n\nclass SourceBox extends React.Component<SourceBoxProps> {\n\tpublic render() {\n\t\tconst { isDragging, connectDragSource, showCopyIcon } = this.props\n\t\tconst opacity = isDragging ? 0.4 : 1\n\t\tconst dropEffect = showCopyIcon ? 'copy' : 'move'\n\n\t\treturn (\n\t\t\tconnectDragSource &&\n\t\t\tconnectDragSource(\n\t\t\t\t<div style={{ ...style, opacity }}>\n\t\t\t\t\tWhen I am over a drop zone, I have {showCopyIcon ? 'copy' : 'no'}{' '}\n\t\t\t\t\ticon.\n\t\t\t\t</div>,\n\t\t\t\t{ dropEffect },\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport default DragSource(ItemTypes.BOX, boxSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n\tisDragging: monitor.isDragging(),\n}))(SourceBox)\n","import * as React from 'react'\nimport { DropTarget, ConnectDropTarget } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\n\nconst style: React.CSSProperties = {\n\tborder: '1px solid gray',\n\theight: '15rem',\n\twidth: '15rem',\n\tpadding: '2rem',\n\ttextAlign: 'center',\n}\n\nconst boxTarget = {\n\tdrop() {\n\t\t//\n\t},\n}\n\nexport interface TargetBoxProps {\n\tconnectDropTarget?: ConnectDropTarget\n\tisOver?: boolean\n\tcanDrop?: boolean\n}\n\nclass TargetBox extends React.Component<TargetBoxProps> {\n\tpublic render() {\n\t\tconst { canDrop, isOver, connectDropTarget } = this.props\n\t\tconst isActive = canDrop && isOver\n\n\t\treturn (\n\t\t\tconnectDropTarget &&\n\t\t\tconnectDropTarget(\n\t\t\t\t<div style={style}>\n\t\t\t\t\t{isActive ? 'Release to drop' : 'Drag item here'}\n\t\t\t\t</div>,\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport default DropTarget(ItemTypes.BOX, boxTarget, (connect, monitor) => ({\n\tconnectDropTarget: connect.dropTarget(),\n\tisOver: monitor.isOver(),\n\tcanDrop: monitor.canDrop(),\n}))(TargetBox)\n","import * as React from 'react'\nimport SourceBox from './SourceBox'\nimport TargetBox from './TargetBox'\n\nexport default class Container extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both', marginTop: '1.5rem' }}>\n\t\t\t\t<div style={{ float: 'left' }}>\n\t\t\t\t\t<SourceBox showCopyIcon={true} />\n\t\t\t\t\t<SourceBox />\n\t\t\t\t</div>\n\t\t\t\t<div style={{ float: 'left' }}>\n\t\t\t\t\t<TargetBox />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Container from './Container'\n\nexport default class CustomizeDropEffects extends React.Component {\n\tpublic render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\t<b>\n\t\t\t\t\t\t<a href=\"https://github.com/react-dnd/react-dnd/tree/master/packages/documentation/src/examples/05%20Customize/Drop%20Effects\">\n\t\t\t\t\t\t\tBrowse the Source\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</b>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tSome browsers let you specify the “drop effects” for the draggable\n\t\t\t\t\titems. In the compatible browsers, you will see a “copy” icon when you\n\t\t\t\t\tdrag the first box over the drop zone.\n\t\t\t\t</p>\n\t\t\t\t<Container />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import * as React from 'react'\nimport Example from '../../../examples/05 Customize/Drop Effects'\nimport Layout from '../../../components/layout'\n\nexport default (props: any) => (\n\t<Layout {...props}>\n\t\t<Example />\n\t</Layout>\n)\n"],"sourceRoot":""}